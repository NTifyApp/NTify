package com.spotifyxp.dialogs;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.spotifyxp.PublicValues;
import com.spotifyxp.swingextension.JDialog;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;

public class FollowPlaylist extends JDialog {
    public JPanel contentPanel;
    public JLabel description;
    public JComboBox options;
    public JButton okButton;
    public JButton cancelButton;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(4, 3, new Insets(10, 10, 10, 10), -1, -1));
        description = new JLabel();
        description.setText("Label");
        contentPanel.add(description, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        options = new JComboBox();
        contentPanel.add(options, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("Button");
        contentPanel.add(cancelButton, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        okButton = new JButton();
        okButton.setText("Button");
        contentPanel.add(okButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPanel.add(spacer1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPanel.add(spacer2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }

    @FunctionalInterface
    public interface OnOptionSelected {
        void optionSelected(boolean isPublic);
    }

    public FollowPlaylist(OnOptionSelected onOptionSelected) throws IOException {
        super();

        description.setText(PublicValues.language.translate("followplaylist.dialog.description"));
        description.setForeground(PublicValues.globalFontColor);

        String[] items = new String[]{
                PublicValues.language.translate("followplaylist.dialog.option1"),
                PublicValues.language.translate("followplaylist.dialog.option2"),
        };
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(items);
        options.setModel(model);
        options.setForeground(PublicValues.globalFontColor);
        options.setSelectedItem(PublicValues.language.translate("followplaylist.dialog.option2"));

        okButton.setText(PublicValues.language.translate("followplaylist.dialog.ok"));
        okButton.addActionListener(e -> {
            onOptionSelected.optionSelected(options.getSelectedIndex() == 0);
            dispose();
        });

        cancelButton.setText(PublicValues.language.translate("followplaylist.dialog.cancel"));
        cancelButton.addActionListener(e -> dispose());
    }

    public void open() {
        setMinimumSize(new Dimension(262, 128));
        add(contentPanel);
        getRootPane().setDefaultButton(okButton);
        setModal(true);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                dispose();
            }
        });
        setTitle(PublicValues.language.translate("followplaylist.dialog.title"));
        pack();
        setVisible(true);
    }
}
